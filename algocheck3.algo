//Methode1:
//produit_scalaire
//by value
PROCEDURE dot_product (v1, v2 :ARRAY_OF_FLOAT[3])
VAR
    prod:FLOAT;
BEGIN
    prod:=0;
    FOR i FROM 0 TO v1.length  DO
        FOR j FROM 0 TO v2.length DO
            prod+=v1[i]*v2[j]
        END_FOR
    END_FOR
    Write(prod)
END
//orthogonalit√©
//by reference
PROCEDURE Orthogonalite(VAR v1, v2: ARRAY_OF_FLOAT[3])
VAR
    orthogonal:=BOOLEAN
BEGIN
    IF (dot_product(v1,v2):=0) THEN
        orthogonal=true;
    ELSE
        orthogonal=false;
    END_IF
    write(orthogonal)
END
//Methode2:
FUNCTION dot_product2(v1,v2 :ARRAY_OF_FLOAT[3]) : FLOAT
VAR
    prod2:FLOAT
BEGIN
    prod:=0;
    FOR i FROM 0 TO v1.length  DO
        FOR j FROM 0 TO v2.length DO
            prod2+=v1[i]*v2[j]
        END_FOR
    END_FOR
    RETURN prod2 ;
END
//orthogonalite
FUNCTION Orthogonalite(v1,v2 :ARRAY_OF_FLOAT[3]) : FLOAT
VAR 
    orthogonal:BOOLEAN
BEGIN
    IF (dot_product(v1,v2):=0) THEN
        orthogonal=true;
    ELSE
        orthogonal=false;
    END_IF
    RETURN orthogonal ;
END